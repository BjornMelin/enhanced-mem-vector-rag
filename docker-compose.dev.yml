version: '3.8'

services:
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./docker_data/qdrant_data:/qdrant/storage
    networks:
      - emvr-network

  neo4j:
    image: neo4j:5.15.0
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_PLUGINS=["apoc", "n10s"]
    volumes:
      - ./docker_data/neo4j_data:/data
      - ./docker_data/neo4j_imports:/var/lib/neo4j/import
      - ./docker_data/neo4j_plugins:/plugins
    networks:
      - emvr-network

  supabase-db:
    image: supabase/postgres:15.1.0
    ports:
      - "5432:5432"
    volumes:
      - ./docker_data/supabase_db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    networks:
      - emvr-network

  mem0:
    image: mem0ai/mem0:latest
    ports:
      - "7891:7891"
    volumes:
      - ./docker_data/mem0_data:/app/data
    environment:
      - MEM0_API_KEY=local_development_key
    networks:
      - emvr-network

  mcp-server:
    build:
      context: .
      dockerfile: mcp_server/Dockerfile.dev
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    environment:
      - MCP_PORT=8080
      - MCP_HOST=0.0.0.0
      - MCP_API_KEY=dev_key
      - QDRANT_URL=http://qdrant:6333
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=password
      - MEM0_URL=http://mem0:7891
      - MEM0_API_KEY=local_development_key
      - SUPABASE_URL=http://supabase-db:5432
      - SUPABASE_KEY=dev_key
    depends_on:
      - qdrant
      - neo4j
      - mem0
      - supabase-db
    networks:
      - emvr-network

networks:
  emvr-network:
    driver: bridge