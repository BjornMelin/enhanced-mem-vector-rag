[build-system]
requires = ["setuptools>=42"]
build-backend = "setuptools.build_meta"

[project]
name = "enhanced-mem-vector-rag"
version = "0.1.0"
description = "Enhanced Memory-Vector RAG with advanced knowledge management"
readme = "README.md"
authors = [
    {name = "Bjorn", email = "bjorn@example.com"}
]
license = {file = "LICENSE"}
requires-python = ">=3.11"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    # Core Frameworks
    "langchain>=0.1.0,<0.2.0",
    "langchain-core>=0.1.0,<0.2.0",
    "langgraph>=0.0.20,<0.1.0",
    
    # LlamaIndex Components
    "llama-index-core>=0.10.0,<0.13.0",  # Latest compatible version
    "llama-index-agent-openai>=0.1.4,<0.2.0",
    "llama-index-vector-stores-qdrant>=0.1.2,<0.2.0",
    "llama-index-graph-stores-neo4j>=0.1.2,<0.5.0", # Compatible with neo4j 5.28+
    "llama-index-embeddings-openai>=0.1.5,<0.2.0",
    "llama-index-embeddings-cohere>=0.1.2,<0.2.0",
    "llama-index-readers-web>=0.1.3,<0.2.0",
    "llama-index-cli>=0.1.2,<0.2.0",
    
    # LLM Clients
    "openai>=1.13.0,<2.0.0",
    "anthropic>=0.17.0",  # Required by chainlit 2.5.5 due to transitive dependency
    "cohere>=4.46,<5.0.0",
    
    # Database & Storage
    "qdrant-client>=1.7.0,<2.0.0",
    "neo4j>=5.28.0,<6.0.0",  # Latest version compatible with llama-index-graph-stores-neo4j
    "supabase>=2.3.0,<3.0.0",
    # Removed postgrest to resolve httpx conflict
    "psycopg2-binary>=2.9.9,<3.0.0",
    "httpx>=0.27.0,<0.28.0",  # Updated for chainlit 2.5.5 compatibility
    
    # Knowledge Representation
    "rdflib>=7.0.0,<8.0.0",
    "owlready2>=0.45,<0.46.0",
    "fastembed>=0.2.0,<0.3.0",
    
    # Backend & API
    "fastmcp>=0.1.0,<0.2.0",
    "fastapi>=0.115.3,<0.116.0",  # Version compatible with newer chainlit
    "uvicorn>=0.25.0,<0.26.0",    # Version compatible with newer chainlit and fastapi
    "pydantic>=2.5.0,<3.0.0",
    "chainlit==2.5.5",         # Latest stable version
    
    # Web & Data Ingestion
    # "crawler4ai>=0.0.5,<0.1.0",  # Temporarily removed as not in public registry
    # "firecrawl>=0.1.0,<0.2.0",  # Temporarily removed as version mismatch
    "scrapy>=2.11.0,<3.0.0",
    "playwright>=1.40.0,<2.0.0",
    "beautifulsoup4>=4.12.3,<5.0.0",
    "requests>=2.31.0,<3.0.0",
    "aiohttp>=3.9.0,<4.0.0",
    "feedparser>=6.0.10,<7.0.0",
    # "python-imap>=0.0.2,<0.1.0",  # Temporarily removed as version mismatch
    
    # AWS 
    "boto3>=1.34.0,<2.0.0",
    "s3fs>=2023.10.0,<2026.0.0",
    
    # Monitoring
    "prometheus-client>=0.17.0,<0.18.0",
    "grafana-api>=1.0.3,<2.0.0",
    
    # Utilities
    "python-dotenv>=1.0.0,<2.0.0",
    "pyjwt>=2.8.0,<3.0.0",
    "cryptography>=42.0.0,<43.0.0",
    "tenacity>=8.2.3,<8.4.0",  # Specific version range to avoid issues
    "aiofiles>=23.2.1,<24.0.0",
    "pyyaml>=6.0.1,<7.0.0",
    "tqdm>=4.66.1,<5.0.0",
    "python-dateutil>=2.8.2,<3.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.3,<8.0.0",
    "pytest-asyncio>=0.21.1,<0.22.0",
    
    # Code Quality
    "ruff>=0.1.5,<0.2.0",  # Handles linting, formatting, and import sorting
    "mypy>=1.7.0,<2.0.0",
    "pre-commit>=3.5.0,<4.0.0",
    "uv>=0.1.11,<0.2.0",
]

[project.urls]
"Homepage" = "https://github.com/bjorn/enhanced-mem-vector-rag"
"Bug Tracker" = "https://github.com/bjorn/enhanced-mem-vector-rag/issues"

# Use Ruff for formatting (replacing Black)
[tool.ruff]
# Common settings
line-length = 100
target-version = "py311"

# Formatter settings
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Linter settings
[tool.ruff.lint]
# Simplified rule selection by categories
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "B",   # flake8-bugbear
    "I",   # isort
    "C",   # flake8-comprehensions and mccabe
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "ANN", # flake8-annotations
    "S",   # flake8-bandit
    "BLE", # flake8-blind-except
    "A",   # flake8-builtins
    "ERA", # eradicate
    "PD",  # pandas-vet
    "PL",  # pylint
    "RUF", # Ruff-specific
]
ignore = ["D203", "D212", "ANN401", "PGH003", "ERA001"]

# Import sorting configuration
[tool.ruff.lint.isort]
known-first-party = ["emvr"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/*" = ["S101", "ANN201", "PLR2004"]

# Simplified mypy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

# Test configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
asyncio_mode = "auto"

# Setuptools configuration for development
[tool.setuptools.packages.find]
exclude = ["tests*"]

[tool.setuptools.package-data]
"emvr" = ["py.typed"]